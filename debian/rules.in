#!/usr/bin/make -f
# Simple set of debian/rules that uses debhelper.
# Based on an example by Joey Hess. 
# extended by Paul Corner, Alex Joni, Chris Radek, Jeff Epler, John
# Morris (in cronological order)

# Copyright (C) 2006 Jeff Epler
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# When used to produce a debian package, this file is a script "used to
# control compilation and installation of the executable"

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# dpkg-shlibdeps warning exclusions
SHLIBDEPS_X :=  # add patterns here
#
# The name 'libtk8.6.so' can't be parsed by dpkg-shlibdeps, it seems:
#     "can't extract name and version from library name 'libtk8.6.so'
SHLIBDEPS_X += tcltk/linuxcnc/linuxcnc.so dist-packages/_togl _togl.so
# 
# libcanterp.so.0 and librs274.so.0: hack for now:  see
# https://github.com/machinekit/machinekit/issues/324
#     "symbol ... used by ... found in none of the libraries"
SHLIBDEPS_X += libcanterp.so.0 librs274.so.0

# Parallel make jobs
ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
    NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
    MAKEFLAGS += -j$(NUMJOBS)
endif

# Host arch used in computing package names
DEB_HOST_ARCH := $(shell dpkg-architecture -qDEB_HOST_ARCH)

# Enable packaging of the PDF docs
#BUILDDOCS = --enable-build-documentation=pdf

# Enable/disable thread flavors; all flavors disabled by default
THREADS_POSIX = --without-posix
THREADS_RT_PREEMPT = --without-rt-preempt
THREADS_XENOMAI = --without-xenomai
THREADS_XENOMAI_KERNEL = --without-xenomai-kernel
THREADS_RTAI_KERNEL = --without-rtai-kernel

# Kernel threads need a list of configured header source directories
# for each architecture
#
# Multiples should be space-separated
#
#HEADERS_XENOMAI_KERNEL_i386 = --with-xenomai-kernel-sources=""
#HEADERS_XENOMAI_KERNEL_amd64 = --with-xenomai-kernel-sources=""
#HEADERS_RTAI_KERNEL_amd64 = --with-rtai-kernel-sources=""
#HEADERS_RTAI_KERNEL_i386 = --with-rtai-kernel-sources=""

#
# debian/substvars contains variable definitions used to fill in
# debian/control file variables.
#
# The file is filled-in by the the variables here.
DEB_HOST_ARCH := $(shell dpkg-architecture -qDEB_HOST_ARCH)

PYTHON_VERSION := $(shell python -c \
	'import sys; print "%d.%d" % sys.version_info[:2]')

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
    NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
    MAKEFLAGS += -j$(NUMJOBS)
endif

debian/substvars: debian/control
	> debian/substvars
	echo "python-version=$(PYTHON_VERSION)" >> debian/substvars
# PREEMPT_RT kernels don't have easily derivable names
ifeq ($(DEB_HOST_ARCH),amd64)
	echo "preempt-rt-ext=amd64" >> debian/substvars
else ifeq ($(DEB_HOST_ARCH),i386)
	echo "preempt-rt-ext=686-pae" >> debian/substvars
endif


debian/control: debian/configure
	@echo rebuilding debian/control
#	# if debian/configure has already been run, re-run; else error out
	if test -f debian/configure.cmdline; then \
	    bash debian/configure.cmdline; \
	else \
	    @echo "Please run debian/configure" \
	        "to generate the debian/control file."; \
	    false; \
	fi


build: build-arch build-indep
build-arch: build-stamp
build-indep: build-stamp
build-stamp: debian/control
	dh_testdir

# Add here commands to compile the package.
	cd src && ./autogen.sh
	cd src && ./configure --prefix=/usr \
	    $(THREADS_POSIX) \
	    $(THREADS_RT_PREEMPT) \
	    $(THREADS_XENOMAI) \
	    $(THREADS_XENOMAI_KERNEL) \
	    $(THREADS_RTAI_KERNEL) \
	    $(HEADERS_XENOMAI_KERNEL_$(DEB_HOST_ARCH)) \
	    $(HEADERS_RTAI_KERNEL_$(DEB_HOST_ARCH)) \
	    --sysconfdir=/etc \
	    --mandir=/usr/share/man \
	    --enable-emcweb \
	    $(BUILDDOCS)
	cd src && $(MAKE) $(MAKEFLAGS)
ifdef BUILDDOCS
	cd src && $(MAKE) $(MAKEFLAGS) docs
endif
	touch build-stamp

clean: debian/control debian/substvars
	dh_testdir
	dh_testroot
	rm -f build-stamp

	cd src && ./autogen.sh
	cd src && ./configure --prefix=/usr \
	    $(THREADS_POSIX) \
	    $(THREADS_RT_PREEMPT) \
	    $(THREADS_XENOMAI) \
	    $(THREADS_XENOMAI_KERNEL) \
	    $(THREADS_RTAI_KERNEL) \
	    $(HEADERS_XENOMAI_KERNEL_$(DEB_HOST_ARCH)) \
	    $(HEADERS_RTAI_KERNEL_$(DEB_HOST_ARCH)) \
	    --sysconfdir=/etc \
	    --mandir=/usr/share/man \
	    --enable-emcweb \
	    $(BUILDDOCS)
	+$(MAKE) -C src clean -s
	rm -f Makefile.inc
	rm -f src/config.log src/config.status

	dh_clean debian/control debian/machinekit-*-kernel-*.install

install: build
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs
# start the install
	mkdir -p debian/tmp
	(cd debian/extras && cp -a * ../tmp)
	(cd src; export DESTDIR=`pwd`/../debian/tmp; $(MAKE) $@)
	mkdir -p debian/tmp/usr/lib debian/tmp/usr/include/linuxcnc
	cp lib/*.a debian/tmp/usr/lib
ifdef BUILDDOCS
	rm debian/tmp/usr/share/doc/linuxcnc/LinuxCNC_Manual_Pages.pdf
else
	rm debian/tmp/usr/share/applications/linuxcnc-usermanual*.desktop
	rm debian/tmp/usr/share/applications/linuxcnc-halmanual*.desktop
	rm debian/tmp/usr/share/applications/linuxcnc-integratormanual*.desktop
	rm debian/tmp/usr/share/applications/linuxcnc-gettingstarted*.desktop
	rm debian/tmp/usr/share/applications/linuxcnc-developer*.desktop
endif

	cp docs/html/gcode*.html debian/tmp/usr/share/doc/linuxcnc/
	rm -rf debian/tmp/usr/share/doc/linuxcnc/html
	rm -f debian/tmp/usr/share/linuxcnc/examples/sample-configs/*/*position*.txt
	# update emcweb.hal
	sed 's/#NC_FILES_DIR/NC_FILES_DIR/' -i debian/tmp/usr/share/linuxcnc/examples/sample-configs/sim/emcweb.ini

ifneq (,$(wildcard debian/machinekit-*-kernel-*.install))
	mkdir -p debian/tmp/etc/udev/rules.d
	cp src/rtapi/shmdrv/shmdrv.rules \
	    debian/tmp/etc/udev/rules.d/50-shmdrv.rules
endif
	mkdir -p debian/tmp/etc/security/limits.d
	cp src/rtapi/shmdrv/limits.d-machinekit.conf \
	    debian/tmp/etc/security/limits.d/machinekit.conf

	dh_install --sourcedir=debian/tmp --fail-missing -Xusr/bin/pasm

test: install
#	# Run nosetests, unsetting LD_PRELOAD to silence fakeroot warnings
	env -u LD_PRELOAD \
	    make -C src nosetests \
		DESTDIR=`readlink -f debian/tmp` \
		NOSETESTS_ARGS="--with-xunit" || { \
	    cat nosetests.rt.log; false; }

# Build architecture-independent files here.
binary-indep: build install test
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install test debian/substvars
	dh_testdir
	dh_testroot
	dh_installchangelogs
	dh_installdocs
	dh_installexamples
	dh_installman
	dh_installmime
	dh_link
	dh_strip
	dh_compress -X.pdf -X.txt -X.hal -X.ini -X.clp -X.var -X.nml \
	    -X.tbl -X.xml -Xsample-configs
	dh_fixperms -X/linuxcnc_module_helper -X/rtapi_app_
	dh_pysupport
	dh_makeshlibs
	dh_installdeb

	# delete files that should be in machinekit-dev package
	rm -f debian/machinekit/usr/bin/comp
	rm -f debian/machinekit/usr/share/man/man1/comp.1.gz
	rm -f debian/machinekit/usr/share/linuxcnc/Makefile.modinc
	rm -f debian/machinekit/usr/share/linuxcnc/Makefile.inc

	cat debian/machinekit/DEBIAN/shlibs debian/shlibs.pre > \
	    debian/shlibs.local
	dh_shlibdeps $(foreach p, $(SHLIBDEPS_X), -X $(p))
	dh_gencontrol -- -Tdebian/substvars
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
